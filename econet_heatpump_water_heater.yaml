---
substitutions:
  name: "econet-hpwh"
  friendly_name: "Water Heater"
  device_description: "Rheem Heat Pump Water Heater"

packages:
  econet: !include econet_electric_tank_water_heater.yaml

econet:
  dst_address: 0x1280

globals:
  - id: hpwh_today_kwh
    type: float

climate:
  - id: !extend econet_climate
    custom_presets:
      0: "Off"
      1: "Eco Mode"
      2: "Heat Pump"
      3: "High Demand"
      4: "Electric"
      # Vacation preset doesn't seem to have any effect
      # 5: "Vacation"

sensor:
  - platform: econet
    name: "Ambient Temperature"
    id: ambient_temp
    sensor_datapoint: AMBIENTT
    unit_of_measurement: "째F"
    accuracy_decimals: 1
    device_class: "temperature"
    state_class: "measurement"
    entity_category: "diagnostic"
  - platform: econet
    name: "Evaporator Temperature"
    id: evaporator_temp
    sensor_datapoint: EVAPTEMP
    unit_of_measurement: "째F"
    accuracy_decimals: 1
    device_class: "temperature"
    state_class: "measurement"
    entity_category: "diagnostic"
  - platform: econet
    name: "Suction Temperature"
    id: suction_temp
    sensor_datapoint: SUCTIONT
    unit_of_measurement: "째F"
    accuracy_decimals: 1
    device_class: "temperature"
    state_class: "measurement"
    entity_category: "diagnostic"
  - platform: econet
    name: "Discharge Temperature"
    id: discharge_temp
    sensor_datapoint: DISCTEMP
    unit_of_measurement: "째F"
    accuracy_decimals: 1
    device_class: "temperature"
    state_class: "measurement"
    entity_category: "diagnostic"
  - platform: econet
    name: "Compressor Runtime"
    id: hours_compressor
    sensor_datapoint: HRS_COMP
    request_mod: 5
    unit_of_measurement: "h"
    accuracy_decimals: 6
    device_class: "duration"
    state_class: "total_increasing"
    entity_category: "diagnostic"
  - platform: econet
    name: "Fan Low Speed Runtime"
    id: hours_fan_low_speed
    sensor_datapoint: HRSLOFAN
    request_mod: 5
    unit_of_measurement: "h"
    accuracy_decimals: 6
    device_class: "duration"
    state_class: "total_increasing"
    entity_category: "diagnostic"
  - platform: econet
    name: "Fan High Speed Runtime"
    id: hours_fan_high_speed
    sensor_datapoint: HRSHIFAN
    request_mod: 5
    unit_of_measurement: "h"
    accuracy_decimals: 6
    device_class: "duration"
    state_class: "total_increasing"
    entity_category: "diagnostic"
  - platform: econet
    name: "Energy"
    id: energy
    sensor_datapoint: TOTALKWH
    request_mod: 5
    unit_of_measurement: "kWh"
    accuracy_decimals: 3
    device_class: "energy"
    state_class: "total_increasing"
    entity_category: "diagnostic"
  - platform: template
    name: "Total Daily Energy"
    id: daily_energy
    state_class: "total_increasing"
    device_class: energy
    accuracy_decimals: 1
    unit_of_measurement: "kWh"
    lambda: |-
      static bool first_run = true;
      if (isnan(id(energy).state)) return NAN;
      if (first_run) id(hpwh_today_kwh) = id(energy).state;
      if (first_run) first_run = false;
      return id(energy).state - id(hpwh_today_kwh);
    update_interval: ${econet_update_interval}
  - platform: econet
    name: "AC Current RMS"
    id: ac_current_rms
    sensor_datapoint: I_RMSVAL
    request_mod: 5
    unit_of_measurement: "A"
    accuracy_decimals: 3
    device_class: "current"
    state_class: "measurement"
  - platform: econet
    name: "Expansion Valve Current Position"
    id: expansion_valve_current_position
    sensor_datapoint: EXACTUAL
    request_mod: 5
    accuracy_decimals: 1
    unit_of_measurement: "%"
    entity_category: "diagnostic"

binary_sensor:
  - platform: econet
    name: "Compressor"
    id: compressor
    sensor_datapoint: COMP_RLY
    device_class: "running"

text_sensor:
  - platform: econet
    name: "Fan Speed"
    id: fan_speed
    sensor_datapoint: FAN_CTRL
    icon: "mdi:fan"
  - platform: econet
    name: "Unit Type"
    id: unittype
    sensor_datapoint: UNITTYPE
    request_mod: 5
    request_once: true
    icon: "mdi:information-box"
    entity_category: "diagnostic"

time:
  - platform: homeassistant
    on_time:
      # Every midnight
      - seconds: 0
        minutes: 0
        hours: 0
        then:
          - lambda: id(hpwh_today_kwh) = id(energy).state;
