# This file is for local development only. Not intended for production use.
# Used during development to test and debug the component.
---
substitutions:
  external_components_source: components  # Build with local code instead of pulling from Github
  zone1name: Zone1Name  # zone names are required for hvac zone control
  zone2name: Zone2Name
  zone3name: Zone3Name  # rename to "Bypass" if using zone3 as bypass
  zone4name: Zone4Name
  zone5name: Zone5Name
  zone6name: Zone6Name  # rename to "Bypass" if using zone6 as bypass

esp32:
  board: esp32dev
  variant: esp32
  framework:
    type: arduino

packages:  # Change this file to the correct one(s) for your device
  econet-hpwh: !include econet_heatpump_water_heater.yaml
  # econet-hvac-furnace: !include econet_hvac_furnace.yaml
  # econet-hvac-air-handler: !include econet_hvac_air_handler.yaml
  # econet-hvac-odu: !include econet_hvac_odu.yaml  # Depends on econet_hvac_[furnace or air_handler].yaml
  # econet-tlwh: !include econet_tankless_water_heater.yaml
  # econet-etwh: !include econet_electric_tank_water_heater.yaml
  # for hvac zones, uncomment lines below as appropriate.  requires an econet-hvac-furnace or econet-hvac-air-handler
  # econet-zonecontrolboard123: !include hvac-zone-yaml/econet_hvac_zone123status.yaml #include if using zones 1,2, or 3
  # econet-zonecontrolboard456: !include hvac-zone-yaml/econet_hvac_zone456status.yaml #include if using zones 4,5, or 6
  # econet-zone1: !include hvac-zone-yaml/econet_hvac_zone1.yaml
  # econet-zone2: !include hvac-zone-yaml/econet_hvac_zone2.yaml
  # econet-zone3: !include hvac-zone-yaml/econet_hvac_zone3.yaml
  # econet-zone3-bypass: !include hvac-zone-yaml/econet_hvac_zone3_electronicbypass.yaml
  # zones 4, 5, 6 not yet supported.  only zone6 as bypass is supported.  if you have these zones, please file an issue
  # econet-zone6-bypass: !include hvac-zone-yaml/econet_hvac_zone6_electronicbypass.yaml

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

# By default, the API is unencrypted and unauthenticated allowing anyone on the
# network to access it.  This may be OK for LAN, but if you want to improve
# security, specify an encryption key here.  The key will have to be shared
# with any clients, such as Home Assistant.  It must be a base-64 encoded
# 32-byte key; to generate one, you can use: `openssl rand -base64 32`
# api:
#   encryption:
#     key: !secret api_encryption_key

# By default, OTA updates are enabled without a password.  To improve security,
# specify a secure password here.
# ota:
#   password: !secret ota_password

# Alternatively, you can disable OTA updates altogether:
# ota: false

# If you have UNSUPPORTED sensors add something like the following to disable them
# sensor:
#   - id: !remove hot_water
